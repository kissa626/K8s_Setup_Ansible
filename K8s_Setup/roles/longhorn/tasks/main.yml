---
- name: Multipath config settings
  ansible.builtin.copy:
    src: multipath.conf
    dest: /etc/multipath.conf
    mode: "0644"
  when: inventory_hostname in groups['workers']

- name: Restart multipath service
  ansible.builtin.systemd:
    name: multipathd
    state: restarted
  when: inventory_hostname in groups['workers']

- name: Create partitions on sdb
  community.general.parted:
    device: /dev/sdb
    number: 1
    state: present
    label: gpt
  when: inventory_hostname in groups['workers']

- name: Create xfs filesystem on sdb
  community.general.filesystem:
    fstype: xfs
    dev: /dev/sdb1
    force: true
  when: inventory_hostname in groups['workers']

- name: Mount partition on sdb
  ansible.posix.mount:
    path: /var/lib/longhorn/
    src: /dev/sdb1
    fstype: xfs
    state: mounted
  when: inventory_hostname in groups['workers']

- name: Add Longhorn Helm repository
  kubernetes.core.helm_repository:
    name: longhorn
    repo_url: https://charts.longhorn.io
    force_update: true
  when: inventory_hostname in groups['masters']

- name: Install Longhorn using Helm
  kubernetes.core.helm:
    kubeconfig: "~{{ ansible_ssh_user }}/.kube/config"
    name: longhorn
    chart_ref: longhorn/longhorn
    chart_version: "{{ longhorn_version }}"
    release_namespace: "{{ longhorn_namespace }}"
    create_namespace: true
    wait: true
    release_values:
      persistence:
        defaultClass: true
        defaultFsType: xfs
        defaultClassReplicaCount: 2
        reclaimPolicy: Retain
      defaultSettings:
        defaultReplicaCount: 2
  when: inventory_hostname in groups['masters']

- name: Wait for pods to be ready
  kubernetes.core.k8s_info:
    kubeconfig: "~{{ ansible_ssh_user }}/.kube/config"
    api_version: v1
    kind: Pod
    wait: true
    namespace: longhorn-system
    field_selectors:
      - status.phase=Running
  when: inventory_hostname in groups['masters']

- name: Create Ingress resource for Longhorn frontend
  kubernetes.core.k8s:
    state: present
    kubeconfig: "~{{ ansible_ssh_user }}/.kube/config"
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: longhorn-ingress
        namespace: longhorn-system
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
      spec:
        ingressClassName: nginx
        rules:
          - host: longhorn.home.local
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: longhorn-frontend
                      port:
                        number: 80
  when: inventory_hostname in groups['masters']
